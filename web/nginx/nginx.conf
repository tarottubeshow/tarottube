{% macro locations() %}
    location / {
        uwsgi_pass app;
        include uwsgi_params;
    }

    location /admin {
        auth_basic "Administrator";
        auth_basic_user_file /opt/repo/.htpasswd;

        uwsgi_pass app;
        include uwsgi_params;
    }

    {% if resourceDir %}
        location /resource {
            root {{ resourceDir }}/..;
        }
    {% endif %}

    location /frags {
        # Disable cache
        add_header Cache-Control no-cache;

        # CORS setup
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length';

        # allow CORS preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        types {
            application/x-mpegURL m3u8;
            video/mp2t ts;
            application/dash+xml mpd;
            # m4a
            # m4v
        }

        root /opt/mount/;
    }

    location ~ /.well-known {
        root /opt/www/;
    }

{% endmacro %}

user root;
worker_processes {{ conf.workers }};
pid /run/nginx.pid;

events {
	worker_connections 768;
}

http {

	sendfile off;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
    client_max_body_size 40M;

	include /opt/repo/web/nginx/mime.types;
	default_type application/octet-stream;

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;

	access_log /dev/stdout;
	error_log /dev/stdout;

	gzip on;
	gzip_disable "msie6";

    client_max_body_size 2G;

    upstream app {
        server 127.0.0.1:4040;
        server 127.0.0.1:4040;
        server 127.0.0.1:4040;
        server 127.0.0.1:4040;
    }

    {% if conf.useHttp %}
        server {
            listen 80;

            server_name _;

            {{ locations() }}
        }
    {% endif %}

    {% if conf.useHttps %}
        {% for domain in conf.domains %}
            server {
                listen 443;
                server_name {{ domain.domain }};

                ssl on;
                ssl_certificate {{ domain.cert }};
                ssl_certificate_key {{ domain.key }};

                {{ locations() }}
            }
        {% endfor %}
    {% endif %}

}
